rem Embedded Daemon script begins ################################SYNCANY_INCL_3#

set APP_NAME=syncanyd
set APP_USER_DIR=%AppData%\Syncany
set APP_DAEMON_CONTROL=%APP_USER_DIR%\daemon.ctrl
set APP_DAEMON_PIDFILE=%APP_USER_DIR%\daemon.pid
set APP_DAEMON_PIDFILE_TMP=%APP_USER_DIR%\daemon.pid.tmp

if not exist "%APP_USER_DIR%" mkdir "%APP_USER_DIR%" 

rem  Checks if the process is already running using a PID file
rem
rem     Please note that even though this code is incredibly ugly, it took me nearly
rem     five hours to get it right. Unless you are a batch file professional, 
rem
rem                   DO NOT TOUCH THIS CODE!
rem
rem  Steps
rem    1. Read PID file to APID (if file exists)
rem    2. If PID was read successfully (not -1), check if PID is running
rem       by writing error output of wmic command to temp error output file, standard output to NUL
rem    3. Determine size of temp error output file
rem    4. If size of temp error output file is zero (no error), the process is running

set RUNNING=0
set APID=-1

rem 1. Read PID file to APID (if file exists)
if exist %APP_DAEMON_PIDFILE% (
  set /P APID=<%APP_DAEMON_PIDFILE%
) 

rem 2. If PID was read successfully (not -1), check if PID is running
if not "%APID%" == "-1" (  
  wmic process where "ProcessID = %APID%" get processid 2> %APP_DAEMON_PIDFILE_TMP% > NUL
  set /P STDERR=<%APP_DAEMON_PIDFILE_TMP%
  
  rem 3. Determine size of temp error output file
  for /f %%i in ("%APP_DAEMON_PIDFILE_TMP%") do set size=%%~zi
  if not defined size set size=0
  del %APP_DAEMON_PIDFILE_TMP%
)

rem 4. If size of temp error output file is zero (no error), the process is running
if not "%APID%" == "-1" (  
  if "%size%" == "0" set RUNNING=1
)

rem END OF PID FILE STUFF

@if "%2" == "start" goto start
@if "%2" == "stop" goto stop
@if "%2" == "reload" goto reload
@if "%2" == "status" goto status

"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %SYNCANY_OPTS%  -classpath "%CLASSPATH%" org.syncany.Syncany %CMD_LINE_ARGS%
goto mainEnd

:stop
if %RUNNING% == 1 (
  echo shutdown >> %APP_DAEMON_CONTROL%
  echo | set /p=Stopping daemon: 
  
  for /l %%i in (1, 1, 10) do (
    if exist %APP_DAEMON_PIDFILE% (
	  echo | set /p=.
	  timeout /t 1 /nobreak > NUL
	) 
  )
  
  if exist %APP_DAEMON_PIDFILE% (
    echo  Failed. 
	exit /b 1
  ) else (
    echo  %APP_NAME%.
  )
) else (
  echo Stopping daemon: %APP_NAME% not running
)
goto mainEnd

:reload
if %RUNNING% == 1 (
  echo reload >> %APP_DAEMON_CONTROL%
  echo | set /p=Reloading daemon: %APP_NAME%.
) else (
  echo Reloading daemon: %APP_NAME% not running
)
goto mainEnd

:status
if %RUNNING% == 1 (
  echo Checking daemon: %APP_NAME% running with pid %APID%
) else (
  echo Checking daemon: %APP_NAME% not running
)
goto mainEnd

:start
@rem Find java.exe
if defined JAVA_HOME goto findJavaFromJavaHome

set JAVA_EXE=javaw.exe
%JAVA_EXE% -version >NUL 2>&1
if "%ERRORLEVEL%" == "0" goto init

echo.
echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
echo.
echo Please set the JAVA_HOME variable in your environment to match the
echo location of your Java installation.

exit /b 1

:findJavaFromJavaHome
set JAVA_HOME=%JAVA_HOME:"=%
set JAVA_EXE=%JAVA_HOME%/bin/javaw.exe

if exist "%JAVA_EXE%" goto init

echo.
echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
echo.
echo Please set the JAVA_HOME variable in your environment to match the
echo location of your Java installation.

exit /b 1

:init
if %RUNNING% == 1 (
  echo Starting daemon: %APP_NAME% already running with pid %APID%
  goto mainEnd
) 

set CLASSPATH=%APP_HOME%\lib\*;%AppData%\Syncany\plugins\lib\*

echo | set /p=Starting daemon: .
start "" /b "%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% -classpath "%CLASSPATH%" org.syncany.Syncany daemon run

for /l %%i in (1, 1, 10) do (
  set "pid_and_ctrl_exists="
  if exist %APP_DAEMON_PIDFILE% if exist %APP_DAEMON_CONTROL% set pid_and_ctrl_exists=1
  
  if not defined pid_and_ctrl_exists (
    echo | set /p=.
    timeout /t 1 /nobreak > NUL
  ) 
)

set "pid_and_ctrl_exists="
if exist %APP_DAEMON_PIDFILE% if exist %APP_DAEMON_CONTROL% set pid_and_ctrl_exists=1
  
if not defined pid_and_ctrl_exists (
  echo  Failed. 
  exit /b 1
) else (
  echo  %APP_NAME%.
  goto mainEnd
)

rem Embedded Daemon script ends #########################################################
